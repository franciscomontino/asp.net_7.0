// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Product_API.Data;

#nullable disable

namespace app.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231116051104_KindOfProduct")]
    partial class KindOfProduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Product_API.Models.KindOfProduct", b =>
                {
                    b.Property<int>("KindOfProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("KindOfProductId"));

                    b.Property<DateTime>("Create")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Update")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("KindOfProductId");

                    b.ToTable("KindOfProducts");

                    b.HasData(
                        new
                        {
                            KindOfProductId = 1,
                            Create = new DateTime(2023, 11, 16, 18, 11, 4, 817, DateTimeKind.Local).AddTicks(4802),
                            Detail = "Laptops",
                            Name = "Laptop",
                            Update = new DateTime(2023, 11, 16, 18, 11, 4, 817, DateTimeKind.Local).AddTicks(4848)
                        });
                });

            modelBuilder.Entity("Product_API.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Create")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("KindOfProductId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("Update")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("KindOfProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Product_API.Models.Product", b =>
                {
                    b.HasOne("Product_API.Models.KindOfProduct", "KindOfProduct")
                        .WithMany()
                        .HasForeignKey("KindOfProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KindOfProduct");
                });
#pragma warning restore 612, 618
        }
    }
}
